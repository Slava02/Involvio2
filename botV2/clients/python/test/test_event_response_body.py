# coding: utf-8

"""
    api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from random_coffe_client.models.event_response_body import EventResponseBody

class TestEventResponseBody(unittest.TestCase):
    """EventResponseBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventResponseBody:
        """Test EventResponseBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventResponseBody`
        """
        model = EventResponseBody()
        if include_optional:
            return EventResponseBody(
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                id = 56,
                name = '',
                users = [
                    random_coffe_client.models.user.User(
                        birthday = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        city = '', 
                        full_name = '', 
                        gender = '', 
                        goal = '', 
                        groups = [
                            random_coffe_client.models.group.Group(
                                id = 56, 
                                name = '', )
                            ], 
                        id = 56, 
                        interests = '', 
                        photo_url = '', 
                        position = '', 
                        socials = '', 
                        user_name = '', )
                    ]
            )
        else:
            return EventResponseBody(
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                id = 56,
                name = '',
                users = [
                    random_coffe_client.models.user.User(
                        birthday = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        city = '', 
                        full_name = '', 
                        gender = '', 
                        goal = '', 
                        groups = [
                            random_coffe_client.models.group.Group(
                                id = 56, 
                                name = '', )
                            ], 
                        id = 56, 
                        interests = '', 
                        photo_url = '', 
                        position = '', 
                        socials = '', 
                        user_name = '', )
                    ],
        )
        """

    def testEventResponseBody(self):
        """Test EventResponseBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
